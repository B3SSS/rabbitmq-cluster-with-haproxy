---
- name: Add EPEL repository
  ansible.builtin.yum:
    name: epel-release
    state: present

- name: Add Erlang repository
  ansible.builtin.yum:
    name: http://packages.erlang-solutions.com/erlang-solutions-1.0-1.noarch.rpm
    state: present

- name: Install Erlang
  ansible.builtin.yum:
    name: erlang
    state: present
    update_cache: true

- name: Install RabbitMQ Server
  ansible.builtin.yum:
    name: rabbitmq-server
    state: present

- name: Create empty list for /etc/hosts
  ansible.builtin.set_fact:
    host_entries: []

- name: Fill host_entries
  ansible.builtin.set_fact:
    host_entries: "{{ host_entries + [hostvars[item]['ansible_default_ipv4']['address'] + ' ' + item]}}"
  loop: "{{ groups['rabbitmq_cluster'] }}"

- name: Add IP-lines to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
  loop: "{{ host_entries }}"

- name: Get cookie from main machine
  ansible.builtin.slurp:
    src: /var/lib/rabbitmq/.erlang.cookie
  register: rabbitmq_main_cookie
  when: inventory_hostname in groups["main"]

- block:
  - name: Copy cookie for slave servers
    ansible.builtin.copy:
      content: |
        {{ hostvars[groups["main"][0]].rabbitmq_main_cookie.content | b64decode }}
      dest: /var/lib/rabbitmq/.erlang.cookie
      owner: rabbitmq
      group: rabbitmq
      mode: "0400"

  - name: Join slave servers
    ansible.builtin.shell: |
      rabbitmqctl stop_app
      rabbitmqctl join_cluster --disc rabbit@{{ groups["main"][0].inventory_hostname }}
      rabbitmqctl start_app
  when: inventory_hostname in groups["slaves"]

- name: Add management plugin
  ansible.builtin.shell: rabbitmq-plugins enable rabbitmq_management

- name: Enable and start RabbitMQ Server
  ansible.builtin.service:
    name: rabbitmq-server
    state: started
    enabled: true
